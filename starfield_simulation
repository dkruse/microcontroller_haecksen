/*  Based on code from Greg Stievenart https://forum.arduino.cc/index.php?topic=408459.0
 */

#include <Wire.h>                     
#include <SPI.h>                      
#include <Adafruit_GFX.h>             
#include <Adafruit_SSD1306.h>

#define OLED_RESET -1                


Adafruit_SSD1306 display(128, 32, &Wire, OLED_RESET);

int hCenter = 64;                      // horizontal center of animation
int vCenter = 16;                      // vertical center of animation
int Hstar, Vstar;                      // star location currently
int Quantity = 100;                    // number of stars
int StarProgress[100];                 // array that tracks progress of each star
int StarAngle[100] = {};               // array that tracks angle of each star
int interval[75] = {};                 // array used to track speed of each star

void setup() {
  Serial.begin(115200);

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }
  display.clearDisplay();                       // clear display

  for (int i = 0; i < Quantity; i++) {          // loop to setup initial stars
    StarAngle[i] = random(360);                 // generates random angle for each star
    interval[i] = (random(4))+1;                // generates random speed for each star +1 keeps stars from being zero
  }
}

void loop() {
  unsigned long currentMillis = millis();
  display.clearDisplay();                       // clear display
  for (int i = 0; i < Quantity; i++) {          // loop to draw each star

    if (StarProgress[i] > 70) {                // if statement to reset stars after going off screen
      StarProgress[i] = StarProgress[i] - 70;  // resets star progress
      StarAngle[i] = random(360);               // resets star angle
      interval[i] = (random(4))+1;              // resets star speed    
    }else{
      StarProgress[i] = StarProgress[i] + interval[i];                            // distance traveled for star
    }
    
    if (currentMillis - StarProgress[i] >= interval[i] && StarProgress[i] > 0) {  // if statement to exclude some star paths
      Hstar = (hCenter + (sin(StarAngle[i] / 57.296) * StarProgress[i] ));        // calculates star horizontal coordinate
      Vstar = (vCenter + (cos(StarAngle[i] / 57.296) * StarProgress[i] ));        // calculates star horizontal coordinate
      display.drawPixel(Hstar, Vstar, SSD1306_WHITE);
    }
  }
  display.display(); 
  delay(100);
}
